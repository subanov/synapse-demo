{
	"name": "CDC_Persons_ingest",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CDCPersons",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetPersonsCDC",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          height as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     enableNativeCdc: true,",
				"     netChanges: true,",
				"     skipInitialLoad: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(full_name = first_name+\" \"+last_name,",
				"          is_delete = isDelete(),",
				"          is_insert = isInsert(),",
				"          is_update = isUpdate(),",
				"          is_upsert = isUpsert(),",
				"          operation_type = case(isUpdate(), 'UPDATE', isInsert(), 'INSERT', isDelete(), 'DELETE', isUpsert(), 'UPSERT'),",
				"          seq = nextSequence(),",
				"          currentDate = currentDate(),",
				"          currentUTC = currentUTC(),",
				"          currentTimestamp = currentTimestamp()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          id,",
				"          first_name,",
				"          height,",
				"          full_name,",
				"          is_delete,",
				"          is_insert,",
				"          is_update,",
				"          is_upsert,",
				"          operation_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}